/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CatalogoEmpaques.java
 *
 * Created on 14/07/2011, 03:17:06 PM
 */
package gui;
import catalogos.Empaques;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dao.DaoCatalogos;
import dao.ErrorTransaccion;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import utilerias.VerificaCaptura;

/**
 *
 * @author carlosp
 */
public class CatalogoEmpaques extends javax.swing.JFrame {
    int guardar = -1;
    protected DefaultTableModel empaque = new DefaultTableModel();
    private JMenuBar menuSea;
    ErrorTransaccion error;
    ArrayList arregloEmpaques;
    public static int nuevo = 1;
    public static int edicion = 2;
    //private final JTable tablaEmpaque;
    /** Creates new form CatalogoEmpaques */
    public CatalogoEmpaques(JMenuBar jMenuBarSea) throws ErrorTransaccion,SQLException {
        
        VerificaCaptura vf1;
        menuSea=jMenuBarSea;
        //ArrayList arregloEmpaques;
        try{
            
            arregloEmpaques=DaoCatalogos.leeTablaEmpaques();
            //System.out.println(arregloEmpaques.size());
                //empaque = (DefaultTableModel) tablaEmpaque.getModel();
                
        }catch(SQLException e){
            error = new ErrorTransaccion(e);
            throw(error);
        }
        initComponents();
        empaque = (DefaultTableModel) tablaEmpaque.getModel();
        for(int i=0; i < arregloEmpaques.size(); i++){
            Empaques registro = (Empaques)arregloEmpaques.get(i);
            empaque.addRow(new Object[]{registro.getIdEmpaque(), registro.getEmpaque(), registro.getCapacidad(),registro.getPeso(),registro.getVolumen()});
        }    

        vf1 = new VerificaCaptura(VerificaCaptura.LONGITUD);
        jTextDescripcion.setInputVerifier(vf1);
        
        vf1 = new VerificaCaptura(VerificaCaptura.ENTERO);
        jTextCapacidad.setInputVerifier(vf1);
        
        vf1 = new VerificaCaptura(VerificaCaptura.DOBLE);
        jTextPeso.setInputVerifier(vf1);
        jTextVolumen.setInputVerifier(vf1);
    }

    
//    private CatalogoEmpaques() {
//        throw new UnsupportedOperationException("Not yet implemented");
//    }

    private CatalogoEmpaques() {
        throw new UnsupportedOperationException("Not yet implemented");
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextIdEmpaque = new javax.swing.JTextField();
        jTextDescripcion = new javax.swing.JTextField();
        jTextCapacidad = new javax.swing.JTextField();
        jTextPeso = new javax.swing.JTextField();
        jTextVolumen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonNuevo = new javax.swing.JButton();
        jButtonEdicion = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonDeshacer = new javax.swing.JButton();
        jButtonPrevio = new javax.swing.JButton();
        jButtonExcel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpaque = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Catálogo de Empaques");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextDescripcion.setColumns(30);
        jTextDescripcion.setEnabled(false);

        jTextCapacidad.setEnabled(false);
        jTextCapacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCapacidadActionPerformed(evt);
            }
        });
        jTextCapacidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextCapacidadFocusLost(evt);
            }
        });

        jTextPeso.setEnabled(false);

        jTextVolumen.setEnabled(false);

        jLabel1.setText("Id. Empaque:");

        jLabel2.setText("Descripción:");

        jLabel3.setText("Capacidad:");

        jLabel4.setText("Peso:");

        jLabel5.setText("Volúmen:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButtonNuevo.setIcon(new javax.swing.ImageIcon("E:\\proyNetBeans\\iconos\\add_obj.gif")); // NOI18N
        jButtonNuevo.setToolTipText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonNuevo);

        jButtonEdicion.setIcon(new javax.swing.ImageIcon("E:\\proyNetBeans\\iconos\\editor.gif")); // NOI18N
        jButtonEdicion.setToolTipText("Editar");
        jButtonEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEdicionActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonEdicion);

        jButtonGuardar.setIcon(new javax.swing.ImageIcon("E:\\proyNetBeans\\iconos\\save_edit.gif")); // NOI18N
        jButtonGuardar.setToolTipText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonGuardar);

        jButtonDeshacer.setIcon(new javax.swing.ImageIcon("E:\\proyNetBeans\\iconos\\undo_edit.gif")); // NOI18N
        jButtonDeshacer.setToolTipText("Deshacer");
        jButtonDeshacer.setEnabled(false);
        jButtonDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeshacerActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonDeshacer);

        jButtonPrevio.setIcon(new javax.swing.ImageIcon("E:\\proyNetBeans\\iconos\\review_ccs_task.gif")); // NOI18N
        jButtonPrevio.setToolTipText("Vista Preliminar");
        jButtonPrevio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevioActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonPrevio);

        jButtonExcel.setIcon(new javax.swing.ImageIcon("E:\\proyNetBeans\\iconos\\prop_ps.gif")); // NOI18N
        jButtonExcel.setToolTipText("Exportar Archivo a Excel");
        jButtonExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcelActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonExcel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );

        tablaEmpaque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id. Empaque", "Descripción", "Capacidad", "Peso", "Volúmen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEmpaque.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaEmpaque.getTableHeader().setResizingAllowed(false);
        tablaEmpaque.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaEmpaque);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextIdEmpaque, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextVolumen, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextPeso, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextCapacidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextIdEmpaque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        guardar=1;
        jTextIdEmpaque.setEnabled(false);
        jTextDescripcion.setEnabled(true);
        jTextCapacidad.setEnabled(true);
        jTextPeso.setEnabled(true);
        jTextVolumen.setEnabled(true);
        jButtonNuevo.setEnabled(false);
        jButtonEdicion.setEnabled(false);
        jButtonGuardar.setEnabled(true);
        jButtonDeshacer.setEnabled(true);
        jButtonExcel.setEnabled(false);
        jButtonPrevio.setEnabled(false);
        jTextIdEmpaque.setText("");
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeshacerActionPerformed
        jTextIdEmpaque.setText("");
        jTextDescripcion.setText("");
        jTextCapacidad.setText("");
        jTextPeso.setText("");
        jTextVolumen.setText("");
        jTextIdEmpaque.setEnabled(true);
        jTextDescripcion.setEnabled(false);
        jTextCapacidad.setEnabled(false);
        jTextPeso.setEnabled(false);
        jTextVolumen.setEnabled(false);
        jButtonNuevo.setEnabled(true);
        jButtonEdicion.setEnabled(true);
        jButtonGuardar.setEnabled(false);
        jButtonDeshacer.setEnabled(false);
        jButtonExcel.setEnabled(true);
        jButtonPrevio.setEnabled(true);
        
        guardar = -1;
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDeshacerActionPerformed

    private void jTextCapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCapacidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCapacidadActionPerformed

    private void jTextCapacidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextCapacidadFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextCapacidadFocusLost

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        try{
            String guardaEmpaques = null;
            Empaques emp =  new Empaques();
            emp.setEmpaque(jTextDescripcion.getText());
            emp.setCapacidad(Integer.parseInt(jTextCapacidad.getText()));
            emp.setPeso(Double.parseDouble(jTextPeso.getText()));
            emp.setVolumen(Double.parseDouble(jTextVolumen.getText()));
            System.out.println(emp);
            if (guardar == nuevo){
                guardaEmpaques = "INSERT empaques (empaque,capacidad,peso,volumen) values ('"+emp.getEmpaque() +"',"
                            + "'"+emp.getCapacidad()+"','"+emp.getPeso()+"','"+emp.getVolumen()+"')";
            }else
                if (guardar == edicion){
                    emp.setIdEmpaque(Integer.parseInt(jTextIdEmpaque.getText()));
                    guardaEmpaques = "UPDATE empaques SET empaque='"+emp.getEmpaque()+"',capacidad='"+emp.getCapacidad()+"',"
                            + "peso='"+emp.getPeso()+"',volumen='"+emp.getVolumen()+"' WHERE idEmpaque='"+emp.getIdEmpaque()+"'";
                }
            try {
                DaoCatalogos.escribeTablaEmpaques(guardaEmpaques);
                arregloEmpaques=DaoCatalogos.leeTablaEmpaques();
                for (int i = empaque.getRowCount() -1; i >= 0; i--){//Eliminar filas del jtable
                    empaque.removeRow(i);
                } 
                for(int i=0; i < arregloEmpaques.size(); i++){
                    Empaques registro = (Empaques)arregloEmpaques.get(i);
                    empaque.addRow(new Object[]{registro.getIdEmpaque(), registro.getEmpaque(), registro.getCapacidad(),registro.getPeso(),registro.getVolumen()});
                }
            }catch (ErrorTransaccion ex) {
                Logger.getLogger(CatalogoEmpaques.class.getName()).log(Level.SEVERE, null, ex);
                guardar=-1;
            }catch (SQLException e){
                error = new ErrorTransaccion(e);
                guardar = -1;
            }
        }catch(Exception e){
            guardar = -1;
            JOptionPane.showMessageDialog(null,"Error en datos de captura","Aviso",
    				JOptionPane.ERROR_MESSAGE);  
            e.printStackTrace();
        }
        jButtonDeshacerActionPerformed(evt);        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEdicionActionPerformed
        guardar=2;
        try{
            Integer id = Integer.parseInt(jTextIdEmpaque.getText());
            for (int i = 0; i < tablaEmpaque.getRowCount(); i++) {
                System.out.println(tablaEmpaque.getValueAt(i,1)+" "+id);
                tablaEmpaque.changeSelection(i, 0, false, false);
                if (tablaEmpaque.getValueAt(i, 0) == id) {
                    tablaEmpaque.changeSelection(i, 0, false, false);
                
                    String descripcion = (String) tablaEmpaque.getValueAt(tablaEmpaque.getSelectedRow(),1);
                    Integer capacidad = (Integer) tablaEmpaque.getValueAt(tablaEmpaque.getSelectedRow(),2);
                    Double peso = (Double) tablaEmpaque.getValueAt(tablaEmpaque.getSelectedRow(), 3);
                    Double volumen = (Double) tablaEmpaque.getValueAt(tablaEmpaque.getSelectedRow(),4);
               
                    jTextDescripcion.setText(descripcion);
                    jTextCapacidad.setText(Integer.toString(capacidad));
                    jTextPeso.setText(Double.toString(peso));
                    jTextVolumen.setText((Double.toString(volumen)));
                
                    jTextDescripcion.setEnabled(true);
                    jTextCapacidad.setEnabled(true);
                    jTextPeso.setEnabled(true);
                    jTextVolumen.setEnabled(true);
                    jButtonNuevo.setEnabled(false);
                    jButtonDeshacer.setEnabled(true);
                    jButtonGuardar.setEnabled(true);
                    jButtonExcel.setEnabled(false);
                    jButtonPrevio.setEnabled(false);
                    break;
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error en Proceso Edición","Aviso",
    				JOptionPane.ERROR_MESSAGE);
            guardar=-1;
            //System.out.println("ocurrio un error ");
        }
        
     }//GEN-LAST:event_jButtonEdicionActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        menuSea.setVisible(true);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_formWindowClosing

    private void jButtonExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcelActionPerformed

        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int resultado = fileChooser.showSaveDialog(this);
        if (resultado == fileChooser.CANCEL_OPTION){
            return;
        }
        File archivo = fileChooser.getSelectedFile();
        try{
            PrintWriter salida = new PrintWriter(new FileWriter (archivo + ".csv"));
            String data [][] = obtenerInformacion();
            for (int i = 0; i < data.length; i++){
                salida.print(data[i][0]);
                for (int j = 1; j < data[i].length; j++){
                    String word = data[i][j];
                    if (word != null){
                        salida.print("," + word);
                    } else{
                        salida.print(",");
                    }
                }
                salida.println();
            }
            salida.close();
        }catch(IOException io){
        }

    }//GEN-LAST:event_jButtonExcelActionPerformed

    private void jButtonPrevioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevioActionPerformed
    try {
        Document document = new Document();
        FileOutputStream file;
        file = new FileOutputStream("fichero.pdf");
        PdfWriter.getInstance(document, file).setInitialLeading(20);
        document.open();
        agregaTitulo(document);
        creaTabla(document);
        document.close();
        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"fichero.pdf");
        System.out.println("Final");
        }catch (DocumentException ex) {
            Logger.getLogger(CatalogoEmpaques.class.getName()).log(Level.SEVERE, null, ex);
        }catch (FileNotFoundException ex) {
                Logger.getLogger(CatalogoEmpaques.class.getName()).log(Level.SEVERE, null, ex);
        }catch (IOException ex) {
                Logger.getLogger(CatalogoEmpaques.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPrevioActionPerformed

    private void creaTabla(Document document)throws DocumentException, BadElementException, MalformedURLException, IOException{
        PdfPTable tabla = new PdfPTable(5);
        float[] medidaCeldas = {0.05f, 0.40f,0.183f,0.183f,0.183f};
        tabla.setWidths(medidaCeldas);
        PdfPCell c1 = new PdfPCell(new Phrase("Id"));
	c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	tabla.addCell(c1);
	c1 = new PdfPCell(new Phrase("Descripción"));
	c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	tabla.addCell(c1);
	c1 = new PdfPCell(new Phrase("Capacidad"));
	c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	tabla.addCell(c1);
	c1 = new PdfPCell(new Phrase("Peso"));
	c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	tabla.addCell(c1);
	c1 = new PdfPCell(new Phrase("Volúmen"));
	c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	tabla.addCell(c1);
            
	tabla.setHeaderRows(1);        
        String data [][] = obtenerInformacion();
        for (int i = 0; i < data.length; i++){
            for (int j = 0; j < 5; j++){
                c1 = new PdfPCell(new Phrase(data[i][j],FontFactory.getFont("arial",7)));   // fuente
                tabla.addCell(c1);
            }
        }
        document.add(tabla);
    }
    private static void agregaTitulo(Document document) throws DocumentException, BadElementException, MalformedURLException, IOException{
        //Image foto = Image.getInstance("logoanita.bmp");
	//foto.scaleToFit(100, 100);
	//foto.setAlignment(Chunk.ALIGN_MIDDLE);
        //foto.setAlignment(Chunk.ALIGN_TOP);
	//document.add(foto);
        Paragraph prefacio = new Paragraph();
        agregaLineaVacia(prefacio, 1);
        Paragraph titulo = new Paragraph("Catálogo de Empaques",
                                        FontFactory.getFont("arial",   // fuente
                                        20,                            // tamaño
                                        Font.ITALIC,                    // col        
                                        BaseColor.BLUE));
        titulo.setAlignment(Element.ALIGN_CENTER);
        document.add(titulo);        
        agregaLineaVacia(prefacio, 1);
        document.add(prefacio);
        //document.newPage();
    }
    
    private static void agregaLineaVacia(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
    public String[][] obtenerInformacion(){
        int numFilas = empaque.getRowCount();
        int numColumnas=empaque.getColumnCount();
        String matrix[][] = new String [numFilas][numColumnas];
        for (int rowIndex = 0; rowIndex < numFilas; rowIndex++){
            for (int colIndex = 0; colIndex < numColumnas; colIndex++){
                    matrix[rowIndex][colIndex] = (String) (empaque.getValueAt(rowIndex,colIndex).toString());
            }
        }
        return matrix;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() { 
                        //JTextField txt1;
        //VerificaCaptura vf1;

                //try {
                    new CatalogoEmpaques().setVisible(true);
                           // vf1 = new VerificaCaptura(VerificaCaptura.FLOTANTE);
        //txt1 = new JTextField(10);
        //txt1.setInputVerifier(vf1);

                //} catch (SQLException ex) {
                //    Logger.getLogger(CatalogoEmpaques.class.getName()).log(Level.SEVERE, null, ex);
                //}
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeshacer;
    private javax.swing.JButton jButtonEdicion;
    private javax.swing.JButton jButtonExcel;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonPrevio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextCapacidad;
    private javax.swing.JTextField jTextDescripcion;
    private javax.swing.JTextField jTextIdEmpaque;
    private javax.swing.JTextField jTextPeso;
    private javax.swing.JTextField jTextVolumen;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tablaEmpaque;
    // End of variables declaration//GEN-END:variables
}
