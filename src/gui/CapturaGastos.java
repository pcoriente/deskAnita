/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CapturaGastos.java
 *
 * Created on 1/07/2011, 12:19:40 PM
 */
package gui;

import catalogos.Bodega;
import catalogos.Empresa;
import catalogos.ProveedoresIva;
import dao.DaoCatalogos;
import dao.DaoEmpresa;
import dao.ErrorTransaccion;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
/**
 *
 * @author carlosp
 */

public class CapturaGastos extends javax.swing.JFrame {

    protected TablaModeloModificada gastosModel;
    public static HashMap mapaConceptosGastos;
    public static final String[] nombreColumnas = {
         "Concepto", "SubConcepto", "Descripci√≥n", "Importe",""};    
    private JMenuBar menuSea;

    public CapturaGastos(JMenuBar jMenuBarSea) throws ErrorTransaccion,SQLException {
        menuSea=jMenuBarSea;
        initComponents();
        gastosModel = new TablaModeloModificada(nombreColumnas);
        gastos.setModel(gastosModel);
        gastosModel.addTableModelListener(new CapturaGastos.InteractiveTableModelListener());
        
        gastos.setSurrendersFocusOnKeystroke(true);
        if (!gastosModel.hasEmptyRow()) {
            gastosModel.addEmptyRow();
        }
        TableColumn hidden = gastos.getColumnModel().getColumn(TablaModeloModificada.HIDDEN);
        hidden.setCellRenderer(new InteractiveRenderer(TablaModeloModificada.HIDDEN));
        inicializaGrid();
        cargaEmpresas(DaoEmpresa.leeTablaEmpresa()); 
        cargaBodegas(DaoCatalogos.leeTablaBodega());
    }
    public void inicializaGrid(){
        gastos.getColumnModel().getColumn(0).setWidth(70);
        gastos.getColumnModel().getColumn(0).setMaxWidth(70);
        gastos.getColumnModel().getColumn(0).setMinWidth(70);
        gastos.getColumnModel().getColumn(1).setWidth(70);
        gastos.getColumnModel().getColumn(1).setMaxWidth(70);
        gastos.getColumnModel().getColumn(1).setMinWidth(70);
        gastos.getColumnModel().getColumn(2).setWidth(420);
        gastos.getColumnModel().getColumn(2).setMaxWidth(420);
        gastos.getColumnModel().getColumn(2).setMinWidth(420);
        gastos.getColumnModel().getColumn(3).setWidth(150);
        gastos.getColumnModel().getColumn(3).setMaxWidth(150);
        gastos.getColumnModel().getColumn(3).setMinWidth(150);
        gastos.getColumnModel().getColumn(4).setWidth(1);
        gastos.getColumnModel().getColumn(4).setMaxWidth(1);
        gastos.getColumnModel().getColumn(4).setMinWidth(1);
        
        gastos.getTableHeader().setReorderingAllowed(false) ;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabelEmpresa = new javax.swing.JLabel();
        jLabelBodega = new javax.swing.JLabel();
        jComboEmpresa = new javax.swing.JComboBox();
        jComboBodega = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        gastos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Captura de Gastos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabelEmpresa.setText("Empresa:");

        jLabelBodega.setText("Bodega:");

        jComboEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEmpresaActionPerformed(evt);
            }
        });

        jComboBodega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBodegaActionPerformed(evt);
            }
        });

        gastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        gastos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        gastos.setColumnSelectionAllowed(true);
        gastos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, gastos, org.jdesktop.beansbinding.ELProperty.create("if (!gastosModel.hasEmptyRow()) gastosModel.addEmptyRow();"), gastos, org.jdesktop.beansbinding.BeanProperty.create("surrendersFocusOnKeystroke"));
        bindingGroup.addBinding(binding);

        gastos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gastosFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(gastos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelEmpresa)
                            .addComponent(jLabelBodega))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBodega, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmpresa)
                    .addComponent(jComboEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBodega))
                .addGap(59, 59, 59)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        menuSea.setVisible(true);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void jComboEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEmpresaActionPerformed
        try {
            Empresa empresa = (Empresa) jComboEmpresa.getSelectedItem();
            String emp=empresa.getCod_emp();
            mapaConceptosGastos = null;
            mapaConceptosGastos = DaoCatalogos.leeTablaConceptoGastos(emp);
            
            //Iterator itr = mapaConceptosGastos.entrySet().iterator();
            //while (itr.hasNext()) {
            //    Map.Entry e = (Map.Entry)itr.next();
            //    System.out.println("clave: "+e.getKey()+"valor:"+e.getValue());
            //}
        } catch (SQLException ex) {
            Logger.getLogger(CapturaGastos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CapturaGastos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboEmpresaActionPerformed

    private void jComboBodegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBodegaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBodegaActionPerformed

    private void gastosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gastosFocusGained
        jComboEmpresa.setEnabled(false);
        jComboBodega.setEnabled(false);
    }//GEN-LAST:event_gastosFocusGained

    public void highlightLastRow(int row) {
        int lastrow = gastosModel.getRowCount();
        if (row == lastrow - 1) {
            gastos.setRowSelectionInterval(lastrow - 1, lastrow - 1);
        } else {
            gastos.setRowSelectionInterval(row + 1, row + 1);
        }
        gastos.setColumnSelectionInterval(0, 0);
    }

    class InteractiveRenderer extends DefaultTableCellRenderer {
         protected int interactiveColumn;

         public InteractiveRenderer(int interactiveColumn) {
             this.interactiveColumn = interactiveColumn;
         }

         public Component getTableCellRendererComponent(JTable gastos,
            Object value, boolean isSelected, boolean hasFocus, int row,
            int column)
         {
             Component c = super.getTableCellRendererComponent(gastos, value, isSelected, hasFocus, row, column);
             //System.out.println("estamos en el renderer");
             if (column == interactiveColumn && hasFocus) {
                 if ((CapturaGastos.this.gastosModel.getRowCount() - 1) == row &&
                    !CapturaGastos.this.gastosModel.hasEmptyRow())
                 {
                     CapturaGastos.this.gastosModel.addEmptyRow();
                 }

                 highlightLastRow(row);
             }
             return c;
         }
     }


    public class InteractiveTableModelListener implements TableModelListener {
         public void tableChanged(TableModelEvent evt) {
            String descrip = null;
             if (evt.getType() == TableModelEvent.UPDATE) {
                 int column = evt.getColumn();
                 int row = evt.getFirstRow();
                 System.out.println("row: " + row + " column: " + column);
                 gastos.setColumnSelectionInterval(column + 1, column + 1);
                 gastos.setRowSelectionInterval(row, row);

                 if (column == 1){
                     gastosModel = (TablaModeloModificada) gastos.getModel();
                     String con = ((String)gastosModel.getValueAt(row,0));
                     String sub = ((String)gastosModel.getValueAt(row,1));
                     System.out.println(con+"--"+sub);
                     Object v = mapaConceptosGastos.get(con.trim()+sub.trim());
                     if (v == null){
                         descrip = "No existe Concepto";
                     }else{
                         descrip = (String) mapaConceptosGastos.get(con.trim()+sub.trim());
                     }
                     gastosModel.setValueAt(descrip, row, 2);
                 }
             }
         }
     }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            System.out.println("principal");
                //try {
                   
                    //new CapturaGastos().setVisible(true);
                        //try {
                           //cargaEmpresas(DaoEmpresa.leeTablaEmpresa());
                            System.out.println("formulario gastos");
                        //} catch (SQLException ex) {
                          //  Logger.getLogger(CapturaGastos.class.getName()).log(Level.SEVERE, null, ex);
                        //}*/
                //} catch (SQLException ex) {
                  //  Logger.getLogger(CapturaGastos.class.getName()).log(Level.SEVERE, null, ex);
                //}
                
            }

        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JTable gastos;
    private static javax.swing.JComboBox jComboBodega;
    private static javax.swing.JComboBox jComboEmpresa;
    private javax.swing.JLabel jLabelBodega;
    private javax.swing.JLabel jLabelEmpresa;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    //public static DefaultTableModel gastos;

    private static void cargaEmpresas(ArrayList lista) {
        java.util.Iterator it = lista.iterator();
        while(it.hasNext()){
            Empresa empresa = (Empresa)it.next();
            jComboEmpresa.addItem(empresa);
        }
    }

    private static void cargaBodegas(ArrayList lBodega) {
        java.util.Iterator it = lBodega.iterator();
        while(it.hasNext()){
            Bodega bodega = (Bodega)it.next();
            jComboBodega.addItem(bodega);
        }
    }
}

